import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class ecssLexer extends Lexer {
    static readonly T__0 = 1;
    static readonly T__1 = 2;
    static readonly T__2 = 3;
    static readonly T__3 = 4;
    static readonly T__4 = 5;
    static readonly T__5 = 6;
    static readonly T__6 = 7;
    static readonly T__7 = 8;
    static readonly T__8 = 9;
    static readonly T__9 = 10;
    static readonly T__10 = 11;
    static readonly T__11 = 12;
    static readonly T__12 = 13;
    static readonly NUMBER = 14;
    static readonly TRUE = 15;
    static readonly FALSE = 16;
    static readonly UNSET = 17;
    static readonly Identifier = 18;
    static readonly LPAREN = 19;
    static readonly RPAREN = 20;
    static readonly LBRACKET = 21;
    static readonly RBRACKET = 22;
    static readonly LCURLY = 23;
    static readonly RCURLY = 24;
    static readonly COLON = 25;
    static readonly SEMI = 26;
    static readonly DOT = 27;
    static readonly COMMA = 28;
    static readonly PLUS = 29;
    static readonly MINUS = 30;
    static readonly MULT = 31;
    static readonly DIV = 32;
    static readonly ASSIGN = 33;
    static readonly LESSTHAN = 34;
    static readonly GREATERTHAN = 35;
    static readonly LESSTHANOREQUAL = 36;
    static readonly GREATERTHANOREQUAL = 37;
    static readonly EXCLAMATION = 38;
    static readonly QUESTION = 39;
    static readonly DOLLAR = 40;
    static readonly AT = 41;
    static readonly QUOTE = 42;
    static readonly STRING_LITERAL = 43;
    static readonly ESC = 44;
    static readonly UNICODE = 45;
    static readonly HEX = 46;
    static readonly EventIdentifier = 47;
    static readonly AtRuleIdentifier = 48;
    static readonly COMMENT = 49;
    static readonly WS = 50;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    private static readonly _serializedATNSegments;
    private static readonly _serializedATNSegment0;
    private static readonly _serializedATNSegment1;
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
